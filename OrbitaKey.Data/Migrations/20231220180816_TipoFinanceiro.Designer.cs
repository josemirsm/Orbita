// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using OrbitaKey.Data;

#nullable disable

namespace OrbitaKey.Data.Migrations
{
    [DbContext(typeof(MyContext))]
    [Migration("20231220180816_TipoFinanceiro")]
    partial class TipoFinanceiro
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseCollation("utf8_general_ci")
                .HasAnnotation("ProductVersion", "6.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.HasCharSet(modelBuilder, "utf8");

            modelBuilder.Entity("OrbitaKey.Data.Models.AuxCep", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("CMun")
                        .HasMaxLength(11)
                        .HasColumnType("varchar(11)")
                        .HasColumnName("cMun");

                    b.Property<int?>("CUf")
                        .HasColumnType("int(11)")
                        .HasColumnName("cUF");

                    b.Property<string>("Cep")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CEP");

                    b.Property<string>("Cidade")
                        .HasColumnType("text");

                    b.Property<string>("Estado")
                        .HasColumnType("text");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)")
                        .HasColumnName("UF");

                    b.HasKey("Id");

                    b.ToTable("aux_cep", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.AuxCest", b =>
                {
                    b.Property<string>("Cest")
                        .HasColumnType("text")
                        .HasColumnName("CEST");

                    b.Property<string>("Descricao")
                        .HasColumnType("text");

                    b.Property<int?>("Ncm")
                        .HasColumnType("int(11)")
                        .HasColumnName("NCM");

                    b.Property<string>("Segmento")
                        .HasColumnType("text");

                    b.ToTable("aux_cest", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.AuxCodigomunicipio", b =>
                {
                    b.Property<string>("Codigo")
                        .HasMaxLength(7)
                        .HasColumnType("varchar(7)");

                    b.Property<string>("Nome")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.HasKey("Codigo")
                        .HasName("PRIMARY");

                    b.ToTable("aux_codigomunicipios", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.AuxIbpt", b =>
                {
                    b.Property<string>("Chave")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("chave");

                    b.Property<string>("Codigo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("codigo");

                    b.Property<string>("Descricao")
                        .HasColumnType("text")
                        .HasColumnName("descricao");

                    b.Property<string>("Estadual")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("estadual");

                    b.Property<string>("Ex")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("ex");

                    b.Property<string>("Fonte")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("fonte");

                    b.Property<string>("Importadosfederal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("importadosfederal");

                    b.Property<string>("Municipal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("municipal");

                    b.Property<string>("Nacionalfederal")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("nacionalfederal");

                    b.Property<string>("Tipo")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("tipo");

                    b.Property<string>("Versao")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("versao");

                    b.Property<string>("Vigenciafim")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vigenciafim");

                    b.Property<string>("Vigenciainicio")
                        .HasMaxLength(255)
                        .HasColumnType("varchar(255)")
                        .HasColumnName("vigenciainicio");

                    b.ToTable("aux_ibpt", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.AuxNcm", b =>
                {
                    b.Property<int>("Codigo")
                        .HasColumnType("int(10)");

                    b.Property<string>("Descricao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("Codigo")
                        .HasName("PRIMARY");

                    b.ToTable("aux_ncm", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Backup", b =>
                {
                    b.Property<int>("Idbackup")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idbackup");

                    b.Property<DateTime?>("DataFim")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataInicio")
                        .HasColumnType("datetime");

                    b.Property<string>("Maquina")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Idbackup")
                        .HasName("PRIMARY");

                    b.ToTable("backup", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.BiPagamento", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<sbyte?>("Caixa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'")
                        .HasComment("Para uso em casos que a venda fiscal não é lançada no caixa");

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CNPJ")
                        .HasComment("CNPJ do cliente");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime")
                        .HasComment("Data em que o laçamento foi criado");

                    b.Property<DateTime>("DataCompetencia")
                        .HasColumnType("datetime")
                        .HasComment("Mês a que se refere a movimentação");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Guid")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Modelo")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasComment("Modelo da nota");

                    b.Property<int>("Quantidade")
                        .HasColumnType("int(11)")
                        .HasComment("QUantidade de paamentos no apurados no lançamento");

                    b.Property<int>("QuantidadeNotas")
                        .HasColumnType("int(11)")
                        .HasComment("Quantidade de notas que tem em cada lançamento");

                    b.Property<int>("RepresentanteId")
                        .HasMaxLength(45)
                        .HasColumnType("int")
                        .HasComment("Id do representante que atende o cliente");

                    b.Property<sbyte?>("Tef")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("TipoSefaz")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasComment("Descrição da forma de pagamento na sefaz");

                    b.Property<decimal>("Valor")
                        .HasMaxLength(45)
                        .HasColumnType("decimal(65,30)")
                        .HasComment("Valor total da aputação");

                    b.HasKey("Id");

                    b.ToTable("bi_pagamentos", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.BiVenda", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("CNPJ");

                    b.Property<DateTime?>("Data")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCompetencia")
                        .HasColumnType("datetime");

                    b.Property<sbyte?>("FiscalCaixa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'")
                        .HasComment("define se a venda fiscal é lançada no caixa");

                    b.Property<string>("Guid")
                        .HasColumnType("text");

                    b.Property<string>("Modelo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Quantidade")
                        .HasColumnType("int(11)");

                    b.Property<int?>("RepresentanteId")
                        .HasColumnType("int(11)");

                    b.Property<decimal?>("Valor")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)")
                        .HasDefaultValueSql("'0.00'");

                    b.HasKey("Id");

                    b.ToTable("bi_vendas", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.CashCliente", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Bairro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Celular2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Cidade")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjRepresentante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Codmun")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CpfCliente")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime?>("Nascimento")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("NomeFantasia")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("NomeRazao")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Numero")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Sincronizado")
                        .HasColumnType("tinyint(1)");

                    b.Property<string>("Telefone")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Telefone2")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("UF")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cash_Cliente", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.CashConfig", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CnpjEmpresa")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("CnpjRepresentante")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<DateTime>("Data")
                        .HasColumnType("datetime(6)");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Instagram")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("MensagemSucesso")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<string>("Site")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.HasKey("Id");

                    b.ToTable("Cash_Config", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Certificado", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<byte[]>("Certificado1")
                        .HasColumnType("longblob")
                        .HasColumnName("Certificado");

                    b.Property<string>("Chave")
                        .HasColumnType("text");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("DataCadastro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("Emissao")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<string>("Razao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Senha")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("Vencimento")
                        .HasColumnType("datetime");

                    b.HasKey("Id");

                    b.ToTable("certificados", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Cliente", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("Atualizacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ContratoAssinado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<DateOnly?>("DataInstalacao")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<bool?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("IdContato")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Iestadual")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("IEstadual");

                    b.Property<decimal?>("Mensalidade")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.Property<int>("MensalidadeDiaVencimento")
                        .HasColumnType("int");

                    b.Property<decimal>("MensalidadePercentual")
                        .HasPrecision(13, 4)
                        .HasColumnType("decimal(13,4)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Preposto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Razao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Regime")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'Simples'");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("TaxaInstalacao")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.HasKey("IdCliente")
                        .HasName("PRIMARY");

                    b.ToTable("cliente", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Clientelog", b =>
                {
                    b.Property<int>("IdCliente")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<bool?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("Codigo")
                        .HasColumnType("int(11)");

                    b.Property<int?>("ContratoAssinado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<DateOnly?>("DataInstalacao")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<bool?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int?>("IdContato")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdEndereco")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Iestadual")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("IEstadual");

                    b.Property<decimal?>("Mensalidade")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.Property<string>("Observacao")
                        .HasMaxLength(600)
                        .HasColumnType("varchar(600)");

                    b.Property<string>("Preposto")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Razao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Regime")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'Simples'");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<decimal?>("TaxaInstalacao")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.HasKey("IdCliente")
                        .HasName("PRIMARY");

                    b.ToTable("clientelog", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Colaborador", b =>
                {
                    b.Property<int>("Idcolaborador")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idcolaborador");

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("datetime");

                    b.Property<DateOnly?>("DataDesligamento")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DataNascimento")
                        .HasColumnType("date");

                    b.Property<string>("Funcao")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Nome")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Idcolaborador")
                        .HasName("PRIMARY");

                    b.ToTable("colaborador", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Config", b =>
                {
                    b.Property<int>("Idconfig")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idconfig");

                    b.Property<int>("ContagemDocumento")
                        .HasColumnType("int(11)")
                        .HasColumnName("contagemDocumento");

                    b.Property<string>("DiretorioBackup")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<decimal>("SalarioAtual")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Idconfig")
                        .HasName("PRIMARY");

                    b.ToTable("config", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Contato", b =>
                {
                    b.Property<int>("Idcontato")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idcontato");

                    b.Property<string>("Celular")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Celular2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email");

                    b.Property<string>("Email2")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasColumnName("email2");

                    b.Property<int?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasColumnName("excluido")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("NomeRepresentante")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Ramal")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Site")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Telefone2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TelefoneRepresentante")
                        .HasMaxLength(20)
                        .HasColumnType("varchar(20)");

                    b.HasKey("Idcontato")
                        .HasName("PRIMARY");

                    b.ToTable("contato", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Empresa", b =>
                {
                    b.Property<int>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)");

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cor1")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cor2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cor3")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<byte[]>("FundoAdm")
                        .HasColumnType("longblob");

                    b.Property<int>("IdContato")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int(11)");

                    b.Property<string>("Iestadual")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("IEstadual");

                    b.Property<byte[]>("LogoAdm")
                        .HasColumnType("longblob");

                    b.Property<byte[]>("LogoPdv")
                        .HasColumnType("longblob");

                    b.Property<string>("Observacao")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Razao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Responsavel")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("SchemaPadrao")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("'orbitadb'");

                    b.Property<string>("SenhaPadrao")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)")
                        .HasDefaultValueSql("'dbakjx25642'");

                    b.HasKey("IdEmpresa")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdContato" }, "fk_empresa_contato1_idx");

                    b.HasIndex(new[] { "IdEndereco" }, "fk_empresa_endereco1_idx");

                    b.ToTable("empresa", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Endereco", b =>
                {
                    b.Property<int>("Idendereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idendereco");

                    b.Property<string>("Bairro")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Cep")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Cidade")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("CodigoMunicipio")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Complemento")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Latitude")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Logradouro")
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("Longitude")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Numero")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Uf")
                        .HasMaxLength(2)
                        .HasColumnType("varchar(2)");

                    b.HasKey("Idendereco")
                        .HasName("PRIMARY");

                    b.ToTable("endereco", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Financeiro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("CNPJ")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<bool>("Cancelado")
                        .HasColumnType("tinyint(1)");

                    b.Property<int>("CanceladoUsuarioId")
                        .HasColumnType("int");

                    b.Property<int>("ClienteId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFinal")
                        .HasColumnType("datetime(6)");

                    b.Property<DateTime>("DataInicial")
                        .HasColumnType("datetime(6)");

                    b.Property<int>("EmpresaId")
                        .HasColumnType("int");

                    b.Property<Guid>("Guid")
                        .HasColumnType("char(36)");

                    b.Property<string>("Obs")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.Property<decimal>("PercentualNegocioado")
                        .HasPrecision(13, 4)
                        .HasColumnType("decimal(13,4)");

                    b.Property<decimal>("SalarioReferencia")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.Property<int>("TipoDocumentoId")
                        .HasColumnType("int");

                    b.Property<int>("TipoFinanceiro")
                        .HasColumnType("int");

                    b.Property<int>("UsuarioId")
                        .HasColumnType("int");

                    b.Property<decimal>("Valor")
                        .HasPrecision(13, 2)
                        .HasColumnType("decimal(13,2)");

                    b.HasKey("Id")
                        .HasName("PRIMARY");

                    b.ToTable("Financeiro");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Fornecedor", b =>
                {
                    b.Property<int>("IdFornecedor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idFornecedor");

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<int?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Fantasia")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdContato")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int>("IdEndereco")
                        .HasColumnType("int(11)");

                    b.Property<string>("Iestadual")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("IEstadual");

                    b.Property<string>("Razao")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.HasKey("IdFornecedor")
                        .HasName("PRIMARY");

                    b.HasIndex(new[] { "IdContato" }, "fk_fornecedor_contato1_idx");

                    b.HasIndex(new[] { "IdEndereco" }, "fk_fornecedor_endereco1_idx");

                    b.ToTable("fornecedor", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Licenca", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<sbyte?>("Ativa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("BloqueioAdm")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("BloqueioAutomatico")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("BloqueioManual")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("BloqueioPdv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Chave")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("CodigoLicenca")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Comanda")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateOnly?>("DataAtivacao")
                        .HasColumnType("date");

                    b.Property<DateTime?>("DataBloqueio")
                        .HasColumnType("datetime");

                    b.Property<DateTime?>("DataCriacao")
                        .HasColumnType("DATETIME");

                    b.Property<DateOnly?>("DataDesativacao")
                        .HasColumnType("date");

                    b.Property<DateOnly?>("DataVencimento")
                        .HasColumnType("date");

                    b.Property<sbyte?>("Financeiro")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<uint?>("IdCliente")
                        .HasColumnType("int(11) unsigned");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdUsuarioAtivacao")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdUsuarioDesativacao")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Maquinas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(3)")
                        .HasDefaultValueSql("'5'");

                    b.Property<string>("MotivoBloqueio")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<sbyte?>("Nfce")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("NFCe")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("Nfe")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("Os")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasColumnName("OS")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("Pdv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<int?>("Plano")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("RelatorioEntradas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'1'");

                    b.Property<sbyte?>("RelatorioVendas")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("RemessaMes")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<sbyte?>("Temporaria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("tinyint(4)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int?>("UsuarioBloqueio")
                        .HasColumnType("int(11)");

                    b.Property<int?>("VendaExterna")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.HasKey("Id");

                    b.ToTable("licenca", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Maquina", b =>
                {
                    b.Property<int>("Idmaquina")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idmaquina");

                    b.Property<string>("AnyDesk")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("AnyDeskSenha")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Chave")
                        .HasColumnType("text");

                    b.Property<string>("Cnpj")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<string>("Ip")
                        .HasMaxLength(40)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Mac")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("PrimeiroAcesso")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<string>("Sistema")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TeamViewer")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("TeamViewerSenha")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("UltimoAcesso")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Usuario")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Versao")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Idmaquina")
                        .HasName("PRIMARY");

                    b.ToTable("maquinas", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Suporte", b =>
                {
                    b.Property<int>("Idsuporte")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idsuporte");

                    b.Property<string>("Celular")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Celular2")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("CodigoAcesso")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("DataCriacao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp")
                        .HasDefaultValueSql("CURRENT_TIMESTAMP");

                    b.Property<DateTime?>("DataFinalizacao")
                        .HasColumnType("datetime");

                    b.Property<string>("Descricao")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Detalhamento")
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<int?>("Finalizado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("FormaAtendimento")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<DateTime?>("HoraMarcada")
                        .HasColumnType("datetime");

                    b.Property<int?>("IdCliente")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdColaborador")
                        .HasColumnType("int(11)");

                    b.Property<int?>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Iniciado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<DateTime?>("InicioAtendimento")
                        .HasColumnType("datetime");

                    b.Property<string>("Prioridade")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("SenhaAcesso")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Setor")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Solicitante")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Telefone")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Tipo")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.HasKey("Idsuporte")
                        .HasName("PRIMARY");

                    b.ToTable("suporte", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.SuporteVideo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<decimal?>("Avaliacao")
                        .ValueGeneratedOnAdd()
                        .HasPrecision(5, 2)
                        .HasColumnType("decimal(5,2)")
                        .HasDefaultValueSql("'0.00'");

                    b.Property<int?>("Avaliacoes")
                        .HasColumnType("int(6)");

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)");

                    b.Property<int?>("IdEmpresa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasDefaultValueSql("'1'");

                    b.Property<string>("Link")
                        .IsRequired()
                        .HasMaxLength(400)
                        .HasColumnType("varchar(400)")
                        .HasColumnName("link");

                    b.Property<int?>("Ordem")
                        .HasColumnType("int(3)");

                    b.HasKey("Id");

                    b.ToTable("suporte_video", (string)null);

                    MySqlEntityTypeBuilderExtensions.HasCharSet(b, "latin1");
                    MySqlEntityTypeBuilderExtensions.UseCollation(b, "latin1_swedish_ci");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("id");

                    b.Property<int?>("Ativo")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'1'");

                    b.Property<DateTime?>("DataCadastro")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int?>("Excluido")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<int>("IdEmpresa")
                        .HasColumnType("int(11)");

                    b.Property<int?>("Logado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(1)")
                        .HasDefaultValueSql("'0'");

                    b.Property<string>("Login")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Maquina")
                        .HasMaxLength(60)
                        .HasColumnType("varchar(60)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Perfil")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Senha")
                        .IsRequired()
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("senha");

                    b.Property<string>("Sobrenome")
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<DateTime?>("UltimoAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<string>("Versao")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("usuario", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Versao", b =>
                {
                    b.Property<int>("Idversao")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int(11)")
                        .HasColumnName("idversao");

                    b.Property<DateTime?>("DataPrimeiroAcesso")
                        .HasColumnType("DATETIME");

                    b.Property<DateTime?>("DataUltimoAcesso")
                        .HasColumnType("datetime");

                    b.Property<string>("Ip")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Mac")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Nome")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("Sistema")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)");

                    b.Property<string>("VSistema")
                        .HasMaxLength(45)
                        .HasColumnType("varchar(45)")
                        .HasColumnName("vSistema");

                    b.HasKey("Idversao")
                        .HasName("PRIMARY");

                    b.ToTable("versao", (string)null);
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Fornecedor", b =>
                {
                    b.HasOne("OrbitaKey.Data.Models.Contato", "IdContatoNavigation")
                        .WithMany("Fornecedors")
                        .HasForeignKey("IdContato")
                        .IsRequired()
                        .HasConstraintName("fk_fornecedor_contato1");

                    b.HasOne("OrbitaKey.Data.Models.Endereco", "IdEnderecoNavigation")
                        .WithMany("Fornecedors")
                        .HasForeignKey("IdEndereco")
                        .IsRequired()
                        .HasConstraintName("fk_fornecedor_endereco1");

                    b.Navigation("IdContatoNavigation");

                    b.Navigation("IdEnderecoNavigation");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Contato", b =>
                {
                    b.Navigation("Fornecedors");
                });

            modelBuilder.Entity("OrbitaKey.Data.Models.Endereco", b =>
                {
                    b.Navigation("Fornecedors");
                });
#pragma warning restore 612, 618
        }
    }
}
